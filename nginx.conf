worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream frontend {
        server frontend:80;  # Adjusted to listen on port 80 for Nginx
    }

    upstream backend {
        server backend:80;  # Points to the 'backend' service in Docker Compose
    }

    server {
        listen 80;

        server_name 167.172.251.135;  # Your server's IP or domain name

        # Serve static uploads from the backend
        location /uploads/ {
            alias /var/www/backend/wwwroot/uploads/;  # Map to the directory where backend stores static files
            autoindex on;  # Optional: Enable directory listing
            access_log off;
            expires 30d;
        }

        # Handle static files for Next.js
        location /_next/ {
            alias /usr/share/nginx/html/.next/;  # Adjust this to the correct mount point for static files
            access_log off;
            expires 30d;
        }

        # Handle API requests to the backend
        location /api/ {
            proxy_pass http://backend;  # Proxy to the backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # Handle all other requests for Next.js
        location / {
            proxy_pass http://frontend;  # Proxy all other requests to the frontend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
    }
}
